{"ast":null,"code":"var _jsxFileName = \"/home/berserker/Desktop/Minimal_Api/LandingPage/Trilha-desafio-3---purple-python/src/pages/login/index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Header } from \"../../components/header\";\nimport { Column, Container, CriarText, RecuperarText, Row, SubTitle, TitlePrincipal } from \"./styles\";\nimport Button from \"../../components/button\";\nimport { Input } from \"../../components/Input/Input\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  var _errors$email, _errors$password;\n  const navigate = useNavigate();\n  function handleNav() {\n    navigate(\"/signup\");\n  }\n  function handleSign() {\n    navigate(\"/feed\");\n  }\n  const schema = yup.object({\n    email: yup.string().email(\"Email inválido\").required(\"Email Campo obrigatório\"),\n    password: yup.string().min(6, \"No minimo 8 caracteres\").required(\"Password campo obrigatório\")\n  }).required();\n  const {\n    register,\n    control,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onBlur\",\n    reValidateMode: \"onChange\"\n  });\n  console.log(isValid);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      autenticado: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./logo.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(TitlePrincipal, {\n          children: \"Fa\\xE7a seu cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n          children: \"Fa\\xE7a o seu Login e make a change...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Digite seu Email\",\n            leftIcon: \"\",\n            name: \"email\",\n            control: control,\n            errorMessage: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Digite sua Palavra Passe\",\n            type: \"password\",\n            leftIcon: \"\",\n            name: \"password\",\n            control: control,\n            errorMessage: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), isValid ? /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Login\",\n            variant: \"secondary\",\n            onClick: () => handleSign()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Preencha os campos corretamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(CriarText, {\n            onClick: () => handleNav(),\n            children: \"Criar conta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RecuperarText, {\n            children: \"Recuperar palavra passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"rC1Dj2UX12jajRepi+7UbYBIATs=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport { Login };\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Header","Column","Container","CriarText","RecuperarText","Row","SubTitle","TitlePrincipal","Button","Input","useNavigate","useForm","yupResolver","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","_errors$email","_errors$password","navigate","handleNav","handleSign","schema","object","email","string","required","password","min","register","control","formState","errors","isValid","resolver","mode","reValidateMode","console","log","children","autenticado","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","placeholder","leftIcon","name","errorMessage","message","type","title","variant","onClick","style","color","_c","$RefreshReg$"],"sources":["/home/berserker/Desktop/Minimal_Api/LandingPage/Trilha-desafio-3---purple-python/src/pages/login/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Header } from \"../../components/header\";\nimport {\n  Column,\n  Container,\n  CriarText,\n  RecuperarText,\n  Row,\n  SubTitle,\n  TitlePrincipal,\n} from \"./styles\";\nimport Button from \"../../components/button\";\nimport { Input } from \"../../components/Input/Input\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm, useWatch } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  function handleNav() {\n    navigate(\"/signup\");\n  }\n  function handleSign() {\n    navigate(\"/feed\");\n  }\n\n  const schema = yup\n    .object({\n      email: yup.string().email(\"Email inválido\").required(\"Email Campo obrigatório\"),\n      password: yup.string().min(6, \"No minimo 8 caracteres\").required(\"Password campo obrigatório\"),\n    })\n    .required();\n\n  const {\n    register,\n    control,\n    formState: { errors, isValid },\n  } = useForm( {\n    resolver: yupResolver(schema),\n    mode: \"onBlur\",\n    reValidateMode: \"onChange\",\n\n  });\n\n  console.log(isValid);\n  return (\n    <>\n      <Header autenticado={false} />\n      <Container>\n        <Column>\n          <img src=\"./logo.png\" alt=\"\" />\n        </Column>\n        <Column>\n          <TitlePrincipal>Faça seu cadastro</TitlePrincipal>\n          <SubTitle>Faça o seu Login e make a change...</SubTitle>\n          <form>\n            <Input\n              placeholder=\"Digite seu Email\"\n              leftIcon={\"\"}\n              name=\"email\"\n              control={control} errorMessage={errors.email?.message}\n            />\n            <Input\n              placeholder=\"Digite sua Palavra Passe\"\n              type=\"password\"\n              leftIcon={\"\"}\n              name=\"password\"\n              control={control}\n              errorMessage={errors.password?.message}\n            />\n            {isValid ? <Button\n              title=\"Login\"\n              variant=\"secondary\"\n              onClick={() => handleSign()}\n            /> : <p style={{color:'red'}}>Preencha os campos corretamente</p>}\n            \n          </form>\n          <Row>\n            <CriarText onClick={() => handleNav()}>Criar conta</CriarText>\n            <RecuperarText>Recuperar palavra passe</RecuperarText>\n          </Row>\n        </Column>\n      </Container>\n    </>\n  );\n};\n\nexport { Login };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}